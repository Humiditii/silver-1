{"version":3,"sources":["components/Preloader/Preloader.module.css","hoc/Auxillary.js","components/NavBar/NavUrl/NavUrl.js","components/NavBar/NavBar.js","components/NavBar/Footer/Footer.js","containers/Bone/Bone.js","components/Button/Button.js","containers/pages/Home/Home.js","components/Input/Input.js","axios-instance.js","store/actions/auth.js","store/actions/actionTypes.js","components/Preloader/Preloader.js","containers/pages/Auth/Signup/Signup.js","containers/pages/Auth/Signin/Signin.js","store/actions/store.js","containers/pages/Store/AddProduct.js","containers/pages/Store/ViewProducts.js","containers/pages/Store/Edit-product.js","containers/pages/Auth/Logout/Logout.js","store/actions/sale.js","containers/pages/Sales/NewSales.js","containers/pages/Sales/ViewSales.js","App.js","serviceWorker.js","store/reducers/store.js","store/reducers/sales.js","store/reducers/auth.js","index.js"],"names":["module","exports","Aux","props","children","navurl","to","link","navname","Navbar","document","addEventListener","elems","querySelectorAll","M","Sidenav","init","navConfigs","links","name","this","token","className","data-target","map","item","index","NavUrl","key","id","Component","connect","state","auth","withRouter","Footer","align","Date","getFullYear","Bone","NavBar","classes","footer","btnStyles","btnColour","btncolour","floatBtn","button","type","action","dataTarget","iconname","btnname","actionType","whereto","Home","AutoInit","style","marginRight","marginLeft","color","fontSize","minHeight","marginBottom","font","data-collapsible","paddingTop","Button","textinputs","value","formValue","inputid","inputtype","onChange","changed","htmlFor","labelname","instance","axios","create","baseURL","signin_success","authMsg","logout","localStorage","removeItem","checkAuthState","dispatch","expiresIn","getItem","expirationDate","getTime","setTimeout","preloader","Loader","Signup","businessName","email","password","confirmPassword","onSubmitHandler","event","preventDefault","onMismatch","onSignUp","inputHandler","updateFields","target","setState","config","icon","stateItems","form","marginTop","success","error","mismatch","onSubmit","Input","loading","Preloader","body","post","headers","then","response","data","message","catch","err","signup_fail","signup","Signin","onSignIn","stateItem","setItem","signin_fail","signin","init_store_details","store_details","get","result","details","store_details_success","AddProduct","productName","quantity","price","onAddProduct","onAutoSignin","console","log","history","replace","successMessage","adding","cart","add_product","ViewProducts","onGotoEdit","onAutoSignIn","onMount","amount","length","totalPrice","reduce","a","b","editId","viewProductBody","onClick","_id","paddingBottom","editParams","productId","get_edit_params","EditProduct","onEdit","updateMessage","endpoint","patch","successMsg","product_edit","Logout","onLogout","get_sales","startDate","endDate","get_sales_success","get_product_list","products","get_product_list_success","NewSales","idNameObject","split","productQuantity","alert","iWantToSell","onLoadProducts","saleBody","borderLeft","class","defaultValue","sales","product","saleMessage","sell","ViewSales","fromDate","toDate","onClickHandler","onGetSale","salesPrice","App","path","component","exact","home","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","initialState","store_details_failed","add_product_success","add_product_failed","add_product_start","init_product_edit","product_edit_success","product_edit_failed","reducer","init_get_sales","get_sales_failed","init_get_products","get_products_failed","get_products_success","init_sale","sale_success","sale_failed","signupMsg","auth_init","signup_success","password_mismatch","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","authReducer","storeReducer","salesReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","getElementById","URL","process","href","origin","fetch","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8c0f5907.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Preloader_Loader__1aRDR\",\"load2\":\"Preloader_load2__xussP\"};","const Aux = props => props.children;\n\nexport default Aux;","import React from 'react';\nimport {NavLink} from 'react-router-dom';\n\nconst navurl = props => {\n    return (\n        <li><NavLink to={props.link}>\n            {props.navname}\n        </NavLink></li>\n    );\n}\n\nexport default navurl","import React , { Component} from 'react';\nimport Aux from '../../hoc/Auxillary';\nimport NavUrl from './NavUrl/NavUrl';\nimport M from 'materialize-css';\nimport {NavLink, withRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nclass Navbar extends Component  {\n    componentDidMount(){\n        document.addEventListener('DOMContentLoaded', function() {\n            const elems = document.querySelectorAll('.sidenav');\n            const instances = M.Sidenav.init(elems);\n            return instances\n          });\n    }\n    render(){\n\n        let navConfigs = {\n            links: ['/', '/login', '/register' ],\n            name: ['Home', 'Login', 'Register' ]\n        }\n\n\n        if( this.props.token){\n            navConfigs = {\n                links: ['/', '/view-products', 'add-product', '/sales', '/new-sale', '/logout'],\n                name: ['Home', 'Store', 'Add Product', 'Sales', 'Sell Now', 'Logout' ]\n            }\n        }\n\n        return (\n            <Aux>\n\n            <nav>\n                <div className=\"nav-wrapper  indigo lighten-1\">\n                    <NavLink to=\"#\" className=\"brand-logo\">SILVER-1</NavLink>\n                    <NavLink to=\"#\" data-target=\"mobile-demo\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></NavLink>\n                        <ul className=\"right hide-on-med-and-down\">\n                            { navConfigs.links.map( (item, index) => (\n                                <NavUrl key={index} link={item} navname={navConfigs.name[index]} />   \n                            ))}\n                        </ul>\n                </div>\n            </nav>\n\n            <ul className=\"sidenav sidenav-close\" id=\"mobile-demo\">\n                { navConfigs.links.map( (item, index) => (\n                    <NavUrl key={index} link={item} navname={navConfigs.name[index]} />\n                ))}\n            </ul>  \n            </Aux>\n        );\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token\n    }\n}\n\n\n\nexport default connect(mapStateToProps)(withRouter(Navbar)); \n\n\n","import React, {Component} from 'react';\nimport Aux from '../../../hoc/Auxillary';\n\n\nclass Footer extends Component {\n\n    render(){\n        return (\n            <Aux>\n                <div className=\"page-footer  indigo lighten-1\">\n                    \n                    <div className=\"footer-copyright\">\n                        <div className=\"container\" align='center'>\n\n                        Developed by Sebago <i className=\"tiny material-icons\">copyright</i> {new Date().getFullYear()} Copyright\n                        \n                        </div>\n                    </div>\n                </div>\n            </Aux>\n        );\n    }\n}\n\nexport default Footer;\n","import React from 'react';\nimport Aux from '../../hoc/Auxillary';\nimport NavBar from '../../components/NavBar/NavBar';\nimport Footer from '../../components/NavBar/Footer/Footer';\nimport classes from './Bone.module.css';\nconst Bone = (props) => {\n    return (\n        <Aux>\n          <NavBar />\n          {/*Application navigation goes here*/}\n\n          {props.children}  \n\n          {/*Application footer  goes here*/}\n          <Footer className = {classes.footer}  />\n        </Aux>\n    );\n} \n\nexport default Bone;","import React from 'react';\nimport Aux from '../../hoc/Auxillary';\nimport {NavLink, withRouter} from 'react-router-dom'\n\nconst button = props => {\n    const btnStyles = ['btn waves-effect waves btn-small ', 'material-icons left']\n    const btnColour = props.btncolour;\n    btnStyles[0] = btnStyles[0] + btnColour + ' ' + props.floatBtn ;\n    let button = (\n            <button type={props.action} className={btnStyles[0]} data-target={props.dataTarget} >\n                <i className={btnStyles[1]}>{props.iconname}</i>{props.btnname}\n            </button>\n    );\n\n    if (props.actionType === 'link' ){\n        button = (\n            <NavLink  type={props.action} to={props.whereto} className={ btnStyles[0] }>\n            <i className={btnStyles[1]}>{props.iconname}</i>{props.btnname}</NavLink>\n        );\n    }\n    return (\n        <Aux>\n            {button}\n        </Aux>\n    );\n}\n\nexport default withRouter(button);","import React, { Component } from 'react';\nimport Aux from '../../../hoc/Auxillary';\nimport Button from '../../../components/Button/Button';\nimport M from 'materialize-css';\n\nclass Home extends Component {\n    componentDidMount(){\n        M.AutoInit()\n    }\n   render(){\n    return (\n        <Aux>\n            <div align='center' style={{marginRight: '10px', marginLeft: '10px'}} >\n                <h5>Welcome to <i style={{color: 'indigo'}} >SILVER-1</i> App</h5>\n                <div style={{fontSize: '20px', minHeight:'25vh', marginBottom: '60px'}} >\n                   <p>This application helps to monitor goods appropriately. <i className=\"material-icons small\">shopping_cart</i></p><i className=\"large material-icons\">insert_chart</i>\n                   <p>Human error is inevitable in huge transactions, though computers may not be  <i><b>100% perfect sometimes <i className=\"material-icons tiny\">cloud_done</i></b></i>, however it is still the best solution to save humans from uneccessary stress <i className=\"material-icons small\">sentiment_very_satisfied</i> .</p> <p> Read through the Features and enjoy <i className=\"material-icons small\">add</i></p> <p style={{font: '10px'}} > Version 1.0.0  <i className=\"material-icons small\">thumb_up</i></p>\n                </div>\n\n                <div style={{fontSize: '17px', minHeight:'25vh'}} >\n                    <h4> <i> Features </i> </h4>\n\n                    <div className='container-fluid'  >\n                           <div>\n                              \n                            <ul className=\"collapsible popout\" data-collapsible=\"accordion\">\n                                <li className='active' >\n                                <div style={{color:'black'}} className=\"collapsible-header active\"><i className=\"material-icons\">account_circle</i>Authentication and Authorization</div>\n                                <div className=\"collapsible-body\"><span> Get authenticated and authorized to be able to perform any process on this application. New users are required to click the get started button or from the side nav to get themselves registered. Registered Users can proceed to login. Any unauthorized request won't be allowed</span></div>\n                                </li>\n                                <li>\n                                <div style={{color:'black'}} className=\"collapsible-header\"><i className=\"material-icons\">add_circle</i>Add products to Store</div>\n                                <div className=\"collapsible-body\"><span>Authorized User Administrator will be able to add new products to store, fully described by Price, Quantity and Name, then the application does the remaining automation and computation it self.</span></div>\n                                </li>\n                                <li>\n                                <div style={{color:'black'}} className=\"collapsible-header\"><i className=\"material-icons\">edit</i>Edit Products</div>\n                                <div className=\"collapsible-body\"><span>Authorized Administrator can click the edit button in front of the product to be edited/updated, then save the process.</span></div>\n                                </li>\n                                <li>\n                                <div style={{color:'black'}} className=\"collapsible-header\"><i className=\"material-icons\">desktop_mac</i>View Products</div>\n                                <div className=\"collapsible-body\"><span>Authorized Administrator can view the list of products available in the store with their respective prices, quantity and the sum of respective prices.</span></div>\n                                </li>\n                                <li>\n                                <div style={{color:'black'}} className=\"collapsible-header\"><i className=\"material-icons\">shop</i>Sell Item</div>\n                                <div className=\"collapsible-body\"><span>Authorized Administrator will be able to sell list of available products in the store, requesting from the product name, quantity.</span></div>\n                                </li>\n                                <li>\n                                <div style={{color:'black'}} className=\"collapsible-header\"><i className=\"material-icons\">import_contacts</i>View Transactions record</div>\n                                <div className=\"collapsible-body\"><span>Authorized Administrator will be able to view records of sold items, specifying the date range else the application pick the present date automatically.</span></div>\n                                </li>\n                                <li>\n                                <div style={{color:'black'}} className=\"collapsible-header\"><i className=\"material-icons\">add</i>Install Application record</div>\n                                <div className=\"collapsible-body\"><span>This application can be usd through a browser (Desktop, Mobile). If you are still viewing it from the browser, why not install it as a Progressive Web Application on Your mobile device. To get that done, visit the web page, click options on the top right conner, then tick add to home screen, OK.\n                                    </span></div>\n                                </li>\n                            </ul>\n                           </div>\n                        </div>\n\n                </div>\n\n                <div align='center' style={{paddingTop: '30px', marginBottom: '20px'}} >\n                    <Button btncolour='indigo' btnname='Get Started' actionType='link' iconname='directions_bike' whereto='/register' />\n                </div>\n            </div>\n        </Aux>\n    );\n   }\n}\n\nexport default Home","import React from 'react';\nimport Aux from '../../hoc/Auxillary';\n\n\nconst textinputs = props => {\n    return (\n        <Aux>\n                <div className=\"input-field col s12\">\n                <i className=\"material-icons prefix\">{props.iconname}</i>\n                <input value={props.formValue} id={props.inputid} type={props.inputtype} onChange={props.changed} />\n                <label htmlFor={props.inputid}>{props.labelname}</label>\n                </div>\n        </Aux>\n    );\n}\n\nexport default textinputs; ","import axios from 'axios';\n\nconst instance = axios.create({\n    //baseURL: 'http://localhost:3333/api/v1'\n    baseURL: 'https://silver1-api.herokuapp.com/api/v1'\n    // https://silver1-api.herokuapp.com/api/v1/\n});\n\nexport default instance;\n","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-instance';\n\nexport const auth_init = () => {\n    return {\n        type: actionTypes.INIT_AUTH_START\n    }\n}\n\nexport const signin_fail = (err) => {\n    return{\n        type: actionTypes.SIGNIN_FAIL,\n        err: err\n    }\n}\n\nexport const mismatch = () => {\n    return {\n        type: actionTypes.PASSWORD_MISMATCH\n    }\n}\n\nexport const signin_success = (token, authMsg) => {\n    return {\n        type: actionTypes.SIGNIN_SUCCESS,\n        token: token,\n        authMsg: authMsg\n    }\n}\n\nexport const signup_success = (msg) => {\n    return {\n        type: actionTypes.SIGNUP_SUCCESS,\n        authMsg: msg\n    }\n}\n\nexport const signup_fail = (err) => {\n    return {\n        type: actionTypes.SIGNUP_FAIL,\n        err: err\n    }\n}\n\nexport const signin = (businessName, password) => {\n    return dispatch => {\n        dispatch(auth_init())\n\n        const body = {\n            businessName: businessName,\n            password: password\n        }\n\n        const config =  {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const endpoint = '/auth/signin';\n\n        axios.post(endpoint, body, config).then(response => {\n\n            const expiresIn = 3600 * 24* 1000;\n            const expirationDate = new Date(new Date().getTime() + expiresIn);\n\n            localStorage.setItem('expirationDate', expirationDate)\n            localStorage.setItem('token', response.data.token)\n\n            dispatch(signin_success(response.data.token, response.data.message))\n\n        }).catch(err => {\n            const error = err.response ? err.response.data.message : err.message;\n            dispatch(signin_fail(error))\n        })\n    }\n}\n\nexport const signup = (businessName, email, password) => {\n\n    return dispatch => {\n        dispatch( auth_init() )\n\n        const body = {\n            businessName: businessName,\n            email: email,\n            password: password\n        }\n\n        const config =  {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const endpoint = '/auth/signup';\n\n        axios.post(endpoint, body, config).then( response => {\n            dispatch(signup_success(response.data.message))\n        }).catch( err => {\n            dispatch(signup_fail(err))\n        })\n    }\n\n}\n\nexport const logout = () => {\n\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n\n    return{\n        type: actionTypes.AUTH_LOGOUT\n    }\n}\n\n\n\nexport const checkAuthTimeout = (expiresIn) => {\n    return dispatch => {\n\n        setTimeout(() => {\n            dispatch(logout());\n        }, expiresIn);\n    }\n}\n\nexport const checkAuthState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if(!token){\n            dispatch(logout());\n            //console.log('First logout excecuted');\n        }else{\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if(expirationDate <= new Date()){\n                dispatch(logout());\n                //console.log('Second logout excecuted');\n            }else{\n               dispatch(signin_success(token, 'Logged before'))\n                //dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime())/1000));\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) ));\n                //console.log((expirationDate.getTime() - new Date().getTime()) / 1000);\n                //console.log('worked to this extent');\n            }\n        }\n    }\n}","export const INIT_AUTH_START = 'INIT_AUTH_START';\nexport const SIGNIN_PROCESS = 'SIGNIN_PROCESS';\nexport const SIGNIN_FAIL ='SIGNIN_FAIL';\nexport const SIGNIN_SUCCESS = 'SIGNIN_SUCCESS';\nexport const SIGNUP_PROCESS = 'SIGNUP_PROCESS';\nexport const SIGNUP_FAIL ='SIGNUP_FAIL';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const PASSWORD_MISMATCH = 'PASSWORD_MISMATCH'; \nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\nexport const INIT_STORE_DETAILS = 'INIT_STORE_DETAILS';\nexport const STORE_DATAILS_SUCCESS = 'STORE_DATAILS';\nexport const STORE_DATAILS_FAILED = 'STORE_DATAILS_FAILED';\nexport const ADD_PRODUCT_SUCCESS = 'ADD_PRODUCT_SUCCESS';\nexport const ADD_PRODUCT_FAILED = 'ADD_PRODUCT_FAILED';\nexport const ADD_PRODUCT_START = 'ADD_PRODUCT_START';\nexport const GET_EDIT_PARAMS = 'GET_EDIT_PARAMS';\nexport const INIT_PRODUCT_EDIT = 'INIT_PRODUCT_EDIT';\nexport const PRODUCT_EDIT_SUCCESS = 'PRODUCT_EDIT_SUCCESS';\nexport const PRODUCT_EDIT_FAILED = 'PRODUCT_EDIT_FAILED';\nexport const INIT_GET_SALES = 'INIT_GET_SALES';\nexport const GET_SALES_SUCCESS = 'GET_SALES_SUCCESS';\nexport const GET_SALES_FAILED = 'GET_SALES_FAILED';\nexport const INT_GET_PRODUCT_LIST = 'INT_GET_PRODUCT_LIST';\nexport const INIT_GET_PRODUCT_LIST = 'INIT_GET_PRODUCT_LIST';\nexport const GET_PRODUCT_LIST_SUCCESS = 'GET_PRODUCT_LIST_SUCCESS';\nexport const GET_PRODUCT_LIST_FAILED = 'GET_PRODUCT_LIST_FAILED'; \nexport const INIT_SALE ='INIT_SALE';\nexport const SALE_SUCCESS = 'SALE_SUCCESS';\nexport const SALE_FAILED = 'SALE_FAILED';","import React from 'react';\nimport Aux from '../../hoc/Auxillary';\n\nimport classes from './Preloader.module.css';\n\nconst preloader = () => (\n    <Aux>\n        <div className={classes.Loader}>Loading...</div>\n        <h4 align='center' style={{color:'indigo'}}>Loading...</h4>\n    </Aux>\n    \n);\n\nexport default preloader;","import React, {Component} from 'react';\nimport Button from '../../../../components/Button/Button';\nimport Input from '../../../../components/Input/Input';\nimport Aux from '../../../../hoc/Auxillary';\nimport {NavLink} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {signup, mismatch } from '../../../../store/actions/auth';\nimport Preloader from '../../../../components/Preloader/Preloader';\n\n\nclass Signup extends Component {\n    state = {\n        businessName: null,\n        email: null,\n        password: null,\n        confirmPassword: null\n    }\n\n\n    onSubmitHandler = (event) => {\n        event.preventDefault();\n        const {businessName, email, password, confirmPassword} = this.state\n        if(password !== confirmPassword){\n            this.props.onMismatch()\n        }else{\n            this.props.onSignUp(businessName, email, password)\n        }\n\n\n    }\n\n\n    inputHandler = (event, item ) => {\n        const updateFields = {\n            ...this.state,\n            [item]: event.target.value\n        }\n        this.setState(updateFields);\n    }\n    render(){\n        const config = {\n            name: ['Business Name','Email',  'Password', 'confirm Password'],\n            type: ['text', 'text', 'password', 'password'],\n            icon: ['person','mail', 'security', 'security'],\n            stateItems: ['businessName', 'email', 'password', 'confirmPassword']\n        }\n        let form = (\n            <div style={{marginTop: '30px'}} >\n                <div align='center' style={{marginBottom: '30px'}} >\n                   <h5> <b><u>Signup As a New User</u> </b></h5>\n                </div>\n                <div align='center' style={{font: '17px', color: 'green'}} >\n                       {this.props.success?  <p> <i className=\"small material-icons\">done_all</i>{this.props.authMsg}</p> : null }\n                    </div>\n                <h5 align='center' style={{color: 'red', fontSize: '19px'}} >{this.props.error}</h5>\n                <h5 align='center' style={{color: 'red', fontSize: '19px'}} >{this.props.mismatch}</h5>\n                <form className=\"col s12\" onSubmit={this.onSubmitHandler} >\n                            \n                            {config.name.map( (item, index) => (\n                                <Input key={index} inputid={item} iconname={config.icon[index]}  inputtype={config.type[index]} labelname={item} changed={(event) =>  this.inputHandler(event, config.stateItems[index]) } />\n                            ))}\n                           \n                            <div align='center' >\n                            <Button action='submit' btncolour='indigo' btnname='Register'  iconname='directions_bike'  />\n                        </div>\n                                <div >\n                                    <p style={{fontSize: '15px'}} className=''>Alread have an account?<NavLink  style={{color: 'indigo'}} to='/login' > <u>Login</u></NavLink></p> \n                                </div>\n                        </form>\n            </div>\n        );\n\n        if(this.props.loading){\n            form = <Preloader />\n        }\n\n        return (\n            <Aux>\n                {form}\n            </Aux>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        loading: state.auth.loading,\n        error: state.auth.error,\n        authMsg: state.auth.authMsg,\n        mismatch : state.auth.mismatch\n    }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSignUp: (businessName, email, password) => { dispatch( signup(businessName,email, password) ) },\n        onMismatch : () => { dispatch(mismatch()) }\n\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","import React, {Component} from 'react';\nimport Button from '../../../../components/Button/Button';\nimport Input from '../../../../components/Input/Input';\nimport Aux from '../../../../hoc/Auxillary';\nimport {NavLink, Redirect} from 'react-router-dom';\nimport {signin} from '../../../../store/actions/auth';\nimport Preloader from '../../../../components/Preloader/Preloader';\nimport { connect } from 'react-redux';\n\nclass Signin extends Component {\n    state = {\n        businessName: null,\n        password: null\n    }\n\n    // componentDidMount(){\n    //     console.log(this.props)\n    // }\n\n    onSubmitHandler = (event) => {\n        event.preventDefault()\n        const {businessName, password} = this.state;\n        this.props.onSignIn(businessName, password)\n\n    }\n\n\n    inputHandler = (event, item ) => {\n        const updateFields = {\n            ...this.state,\n            [item]: event.target.value\n        }\n        this.setState(updateFields);\n    }\n\n    render(){\n        const config = {\n            name: ['Business Name',  'Password'],\n            type: ['text',  'password'],\n            icon: ['person', 'security'],\n            stateItem: ['businessName', 'password']\n        }\n        let form = (\n            <div style={{marginTop: '40px'}} >\n                <div align='center' style={{marginBottom: '30px'}} >\n                    <h5><u>Login To Your Account</u></h5>  <i className=\"large material-icons\">account_circle</i>\n                </div>\n                    <h5 align='center' style={{color: 'red', fontSize: '19px'}} >{this.props.error}</h5>\n                  \n                <form className=\"col s12\" onSubmit={this.onSubmitHandler} >\n                            \n                            {config.name.map( (item, index) => (\n                                <Input key={index} inputid={item} iconname={config.icon[index]}  inputtype={config.type[index]} labelname={item} changed={(event) =>  this.inputHandler(event, config.stateItem[index]) } />\n                            ))}\n                           \n                            <div align='center' >\n                            <Button action='submit' btncolour='indigo' btnname='Login'  iconname='directions_bike'  />\n                        </div>\n                                <div>\n                                    <p className=''>Don't have an account?<NavLink  style={{color: 'indigo'}} to='/register' > <u>Register</u></NavLink></p> \n                                </div>\n                        </form>\n            </div>\n        );\n\n        if(this.props.token){\n            \n            return <Redirect to='/view-products' />\n        }\n        if(this.props.loading){\n            form = <Preloader />\n        }\n\n        return (\n            <Aux>\n                {form}\n            </Aux>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        error: state.auth.error,\n        loading: state.auth.loading,\n        // authMsg: state.auth.authMsg\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSignIn: (businessName, password) => { dispatch(signin(businessName,password)) }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin);","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-instance';\n\nexport const init_store_details = () => {\n    return {\n        type: actionTypes.INIT_STORE_DETAILS\n    }\n}\n\nexport const store_details_success = ([...details]) => {\n    return {\n        type: actionTypes.STORE_DATAILS_SUCCESS,\n        details: [...details]\n    }\n}\n\nexport const store_details_failed = (error) => {\n    return {\n        type: actionTypes.STORE_DATAILS_FAILED,\n        error: error\n    }\n}\n\nexport const add_product_success = (successMessage) => {\n    return {\n        type: actionTypes.ADD_PRODUCT_SUCCESS,\n        successMessage: successMessage\n    }\n}\n\nexport const add_product_failed = (error) => {\n    return {\n        type: actionTypes.ADD_PRODUCT_FAILED,\n        error: error\n    }\n}\n\nexport const add_product_start = () => {\n    return {\n        type: actionTypes.ADD_PRODUCT_START\n    }\n}\n\nexport const store_details = (token) => {\n    return dispatch => {\n        dispatch(init_store_details);\n\n        const endpoint = '/product/products'\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            }\n        } \n        \n        axios.get(endpoint, config).then( result=> {\n            //console.log(result)\n            dispatch(store_details_success([...result.data.data]))\n        }).catch( err => {\n           // console.log(err.response.data.message)\n            dispatch(store_details_failed(err.response.data.message))\n        })\n    }\n}\n\n\nexport const add_product = (token, name, price, quantity) => {\n    return dispatch => {\n        dispatch( add_product_start() )\n\n        const body = {\n            name: name,\n            price: price,\n            quantity: quantity\n        }\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            }\n        } \n\n        const endpoint = '/product/add-product';\n\n        axios.post(endpoint,body,config).then( result => {\n            \n            dispatch( add_product_success(result.data.message) )\n        }).catch(err => {\n            dispatch(add_product_failed(err.response.data.message))\n        })\n    }\n}\n\nexport const get_edit_params = (quantity, price, productId) => {\n    return {\n        type: actionTypes.GET_EDIT_PARAMS,\n        quantity: quantity,\n        price: price,\n        productId: productId\n    }\n}\n\nexport const init_product_edit = () => {\n    return {\n        type: actionTypes.INIT_PRODUCT_EDIT\n    }\n}\n\nexport const product_edit_success = (successMsg) => {\n    return {\n        type: actionTypes.PRODUCT_EDIT_SUCCESS,\n        successMsg: successMsg\n    }\n}\n\nexport const product_edit_failed = (error) => {\n    return {\n        type: actionTypes.PRODUCT_EDIT_FAILED,\n        error: error\n    }\n}\n\nexport const product_edit = (token,productId, quantity, price) => {\n    return dispatch => {\n        dispatch(init_product_edit())\n\n        const body = {\n            quantity: quantity,\n            price: price\n        }\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            }\n        }\n\n        const endpoint = `/product/edit-product/${productId}`;\n\n        axios.patch(endpoint, body, config).then(result=> {\n            console.log(result);                                                       \n            dispatch(product_edit_success(result.data.message))\n        }).catch(err => {\n            dispatch(product_edit_failed(err.response.data.message))\n        })\n    }\n}","import React, { Component } from 'react';\nimport Aux from '../../../hoc/Auxillary';\nimport {connect} from 'react-redux';\nimport Button from '../../../components/Button/Button';\nimport Input from '../../../components/Input/Input';\nimport Preloader from '../../../components/Preloader/Preloader';\nimport {checkAuthState} from '../../../store/actions/auth';\nimport {add_product} from '../../../store/actions/store';\nimport { Redirect } from 'react-router-dom';\n\n\nclass AddProduct extends Component {\n    componentDidMount(){\n        this.props.onAutoSignin()\n        console.log(this.props.token)\n        this.props.history.replace('/add-product')\n    }\n\n    state = {\n        productName: null,\n        quantity: null, \n        price: null\n    }\n\n\n    onSubmitHandler = (event) => {\n        event.preventDefault()\n        const {productName, quantity, price} = this.state;\n        this.props.onAddProduct(this.props.token,productName,price,quantity)\n    }\n\n\n    inputHandler = (event, item ) => {\n        const updateFields = {\n            ...this.state,\n            [item]: event.target.value\n        }\n        this.setState(updateFields);\n    }\n    render(){\n        const config = {\n            name: ['Product Name', 'Quantity', 'Price'],\n            type: ['text',  'number', 'number'],\n            icon: ['description', 'shopping_basket', 'money'],\n            stateItem: ['productName', 'quantity', 'price']\n        }\n        let form = (\n            <div style={{marginTop: '40px'}} >\n                <div align='center'  >\n                    <h5>Add Product</h5>\n                </div>\n                <div align='center' style={{color: 'green'}}>\n                {this.props.successMessage? <h5><i className=\"small material-icons\">done_all</i>{this.props.successMessage}</h5> : null }\n                   \n                </div>\n                <form className=\"col s12\" onSubmit={this.onSubmitHandler} >\n                            \n                            {config.name.map( (item, index) => (\n                                <Input key={index} inputid={item} iconname={config.icon[index]}  inputtype={config.type[index]} labelname={item} changed={(event) =>  this.inputHandler(event, config.stateItem[index]) } />\n                            ))}\n                           \n                            <div align='center' >\n                            <Button action='submit' btncolour='indigo' btnname='Add Product'  iconname='storage'  />\n                        </div>\n                </form>\n\n                <div align='center' style={{marginTop: '30px'}}>\n                   <Button btncolour='indigo' btnname='View Store' actionType='link' iconname='shop' whereto='/view-products' />\n                </div>\n            </div>\n        );\n\n        if(!this.props.token){\n            return <Redirect to='/login' />\n        }\n\n        if(this.props.adding){\n            form = <Preloader />\n        }\n        return (\n            <Aux>\n                <div>\n                    {form}\n                </div>\n            </Aux>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        adding: state.cart.adding,\n        successMessage: state.cart.successMessage\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n\n    return {\n        onAutoSignin: () => { dispatch(checkAuthState()) },\n        onAddProduct: (token, name, price, quantity) => {dispatch (add_product(token, name, price, quantity)) }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddProduct);","import React, { Component } from 'react';\nimport Aux from '../../../hoc/Auxillary';\nimport Button from '../../../components/Button/Button';\nimport {connect} from 'react-redux';\nimport {checkAuthState} from '../../../store/actions/auth';\nimport {store_details, get_edit_params} from '../../../store/actions/store';\nimport { Redirect } from 'react-router-dom';\nimport Preloader from '../../../components/Preloader/Preloader';\n\n\nclass ViewProducts extends Component {\n\n    componentDidMount(){\n        this.props.onAutoSignIn()\n        // const token = localStorage.getItem('token')\n        if(this.props.token){\n            this.props.onMount(this.props.token)\n            //console.log(this.props.token)\n        }\n        \n    }\n\n    inputHandler = (event, id, quantity, price) => {\n        event.preventDefault();\n        this.props.onGotoEdit(quantity, price, id)\n        \n    }\n\n    // onClickHandler = (event) => {\n    //     event.preventDefault();\n    //     alert('I was clicked')\n    // }\n\n    render(){\n        if(!this.props.token){\n            return <Redirect to='/login' />\n        }\n\n        let amount = '0'\n\n        if(this.props.details.length > 0){\n\n            amount = this.props.details.map( item => item.totalPrice).reduce((a,b) => a +b , 0 )\n        }\n    \n        if (this.props.editId){\n            return <Redirect to='/edit-product' />\n        }\n\n        let viewProductBody = (\n            <div style={{fontSize:'15px'}} >\n                    <div align='center' >\n                        <h5>List Of Products</h5>\n                    </div>\n                    <div>\n                        <table className='centered highlight '>\n                            <thead>\n                                <tr>\n                                    <th>Product Name</th>\n                                    <th>Quantity</th>\n                                    <th>Item Price</th>\n                                    <th>Total Price</th>\n                                    <th>Edit/Update</th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                \n                              \n                                 {this.props.details.length > 0 ? this.props.details.map( (item, index)=> (\n                                   <Aux key ={index}>\n                                        <tr>\n                                        <td>{item.name}</td>\n                                        <td>{item.quantity}</td>\n                                        <td>₦{item.price}</td>\n                                        <td>₦{item.totalPrice}</td>\n                                        <td onClick={(event) =>  this.inputHandler(event, item._id, item.quantity, item.price) } ><Button  floatBtn=' btn-floating' btncolour='indigo' btnname='Edit'  iconname='edit'  /></td>\n                                    </tr>\n                                   </Aux>\n                                ) ) : null}\n                                \n                                 \n                            </tbody>\n                        </table>\n                        <h5 align='center' >{this.props.error}</h5>\n                    </div>\n                    <h5 align='center' style={{fontSize: '19px', paddingTop: '40px'}}> Total Price : ₦{amount} </h5>\n\n                    <div align='center' style={{marginTop: '30px', marginBottom: '30px'}}>\n                        <Button btncolour='indigo' btnname='Add Product' actionType='link' iconname='shop' whereto='/add-product' />\n                    </div>\n\n                    <div align='center' style={{marginTop: '30px',paddingBottom: '30px' }} >\n                        <Button btncolour='indigo' btnname='Sell Now' actionType='link' iconname='storage' whereto='/new-sale' />\n                    </div>\n                </div>\n        );\n\n        if(this.props.adding){\n            viewProductBody = <Preloader />\n        }\n        return (\n            <Aux>\n                {viewProductBody}\n            </Aux>\n        )\n    }\n}\n\n\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        details: state.cart.details,\n        error: state.cart.error,\n        adding: state.cart.adding,\n        editId: state.cart.editParams.productId\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAutoSignIn: () => { dispatch(checkAuthState()) },\n        onMount: (token) => { dispatch(store_details(token)) },\n        onGotoEdit: (quantity, price, productId) => { dispatch( get_edit_params(quantity, price, productId) ) }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewProducts);","import React, { Component } from 'react';\nimport Aux from '../../../hoc/Auxillary';\nimport {connect} from 'react-redux';\nimport Button from '../../../components/Button/Button';\nimport Input from '../../../components/Input/Input';\nimport Preloader from '../../../components/Preloader/Preloader';\nimport {checkAuthState} from '../../../store/actions/auth';\nimport {product_edit} from '../../../store/actions/store';\nimport { Redirect } from 'react-router-dom';\n\n\nclass EditProduct extends Component {\n    componentDidMount(){\n        this.props.onAutoSignin()\n        console.log(this.props.token)\n        //this.props.history.replace('/add-product')\n    }\n\n    state = {\n        quantity: this.props.editParams.quantity, \n        price: this.props.editParams.price\n    }\n\n    onSubmitHandler = (event) => {\n        event.preventDefault()\n        //token, productId, quantity, price\n        const {quantity, price} = this.state;\n        this.props.onEdit(this.props.token, this.props.editParams.productId,quantity, price)\n        // this.props.onAddProduct(this.props.token,productName,price,quantity)\n    }\n\n\n    inputHandler = (event, item ) => {\n        const updateFields = {\n            ...this.state,\n            [item]: event.target.value\n        }\n        this.setState(updateFields);\n    }\n    render(){\n        const config = {\n            name: [ 'Quantity', 'Price'],\n            type: [ 'number', 'number'],\n            icon: ['shopping_basket', 'money'],\n            stateItem: ['quantity', 'price']\n        }\n        let form = (\n            <div style={{marginTop: '40px'}} >\n                <div align='center'  >\n                    <h5>Edit Product</h5>\n                </div>\n                <div align='center' style={{font: '15px',color: 'green'}}>\n                {this.props.updateMessage? <h5><i className=\"small material-icons\">done_all</i>{this.props.updateMessage}</h5> : null }\n                   \n                </div>\n                <div align='center' style={{font: '15px',color: 'red'}}>\n                    <h5>{this.props.error}</h5>\n                </div>\n                <form className=\"col s12\" onSubmit={this.onSubmitHandler} >\n                            <div align='center' style={{fontSize: '16px', marginTop: '40px', color: 'green'}} >\n                                <p> <i>Quantity</i>: {this.state.quantity}</p>\n                                <p><i>Price</i>: {this.state.price}</p>\n                            </div>\n                            \n                            {config.name.map( (item, index) => (\n                                <Input key={index} inputid={item} iconname={config.icon[index]}  inputtype={config.type[index]} labelname={item} changed={(event) =>  this.inputHandler(event, config.stateItem[index]) } />\n                            ))}   \n                            <div align='center' >\n                            <Button action='submit' btncolour='indigo' btnname='Edit Product'  iconname='storage'  />\n                        </div>\n                </form>\n\n                <div align='center' style={{marginTop: '50px'}}>\n                    <Button btncolour='indigo' btnname='View Store' actionType='link' iconname='shop' whereto='/view-products' />\n                </div>\n            </div>\n        );\n\n        if(!this.props.token){\n            return <Redirect to='/login' />\n        }\n\n        if(this.props.adding){\n            form = <Preloader />\n        }\n        return (\n            <Aux>\n                <div>\n                    {form}\n                </div>\n            </Aux>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        editParams: state.cart.editParams,\n        updateMessage: state.cart.updateMessage,\n        error: state.cart.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n\n    return {\n        onAutoSignin: () => { dispatch(checkAuthState()) },\n        onEdit: (token, productId, quantity, price) => { dispatch( product_edit(token, productId, quantity, price) ) }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditProduct);","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {logout} from '../../../../store/actions/auth';\n\nclass Logout extends Component {\n    componentDidMount () {\n        this.props.onLogout();\n    }\n\n    render () {\n        return <Redirect to=\"/\"/>;\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLogout: () => dispatch(logout())\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(Logout);","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-instance';\n\nexport const init_get_sales = () => {\n    return{\n        type: actionTypes.INIT_GET_SALES\n    }\n}\n\nexport const get_sales_failed = (error) => {\n    return {\n        type: actionTypes.GET_SALES_FAILED,\n        error: error\n    }\n}\n\nexport const get_sales_success = ([...details]) => {\n    return {\n        type: actionTypes.GET_SALES_SUCCESS,\n        details: [...details]\n    }\n}\n\nexport const get_sales = (token, startDate, endDate) => {\n    return dispatch => {\n        dispatch(init_get_sales());\n\n       \n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            }\n        }\n\n        if (!startDate && !endDate){\n            startDate = 'now';\n            endDate = 'now';\n        }\n\n        const endpoint = `/sale/sales/${startDate}/${endDate}`;\n\n        axios.get(endpoint, config).then( result => {\n            console.log(result)\n            dispatch(get_sales_success([...result.data.data]))\n        }).catch(err => {\n            dispatch(get_sales_failed(err.response.data.message))\n        })\n\n    }\n}\n\nexport const init_get_products = () => {\n    return {\n        type: actionTypes.INT_GET_PRODUCT_LIST\n    }\n}\n\nexport const get_product_list_success = ([...products]) => {\n    return {\n        type: actionTypes.GET_PRODUCT_LIST_SUCCESS,\n        products: [...products]\n    }\n}\n\nexport const get_product_list_failed = (error) => {\n    return {\n        type: actionTypes.GET_PRODUCT_LIST_FAILED,\n        error: error\n    }\n}\n\nexport const get_product_list = (token) => {\n    return dispatch => {\n        dispatch( init_get_products() );\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            }\n        }\n\n        const endpoint = '/sale/product-list';\n\n        axios.get(endpoint, config).then( result=> {\n            //console.log(result.data.data)\n            dispatch( get_product_list_success([...result.data.data]) )\n        }).catch(err =>{\n            dispatch(get_product_list_failed(err.response.data.message))\n        })\n    }   \n}\n\nexport const init_sale = () => {\n    return {\n        type: actionTypes.INIT_SALE\n    }\n}\n\nexport const sale_success = (saleMessage) => {\n    return {\n        type: actionTypes.SALE_SUCCESS,\n        saleMessage: saleMessage\n    }\n}\n\nexport const Sale_failed = (error) => {\n    return {\n        type: actionTypes.SALE_FAILED,\n        error: error\n    }\n}\n\nexport const sell = (product, productId, quantity, token) => {\n    return dispatch => {\n        dispatch( init_sale() )\n\n        const body = {\n            product: product,\n            productId: productId,\n            quantity: quantity\n        }\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            }\n        }\n\n        const endpoint = '/sale/new-sale';\n\n        axios.post(endpoint, body, config).then( result => {\n            dispatch( sale_success(result.data.message) )\n        }).catch( err=> {\n            dispatch( Sale_failed(err.response.data.message) )\n        })\n    }\n}","import React, {Component} from 'react';\nimport Aux from '../../../hoc/Auxillary';\nimport {checkAuthState} from '../../../store/actions/auth';\nimport {connect} from 'react-redux';\nimport Input from '../../../components/Input/Input';\nimport {get_product_list} from '../../../store/actions/sale';\nimport { Redirect } from 'react-router-dom';\nimport Button from '../../../components/Button/Button';\nimport {sell} from '../../../store/actions/sale';\nimport Preloader from '../../../components/Preloader/Preloader';\n\n\n\nclass NewSales extends Component {\n\n    componentDidMount(){\n        this.props.onAutoSignIn();\n        // this.props.onLoadProducts(token)\n        if(this.props.token){\n            this.props.onLoadProducts(this.props.token);\n            console.log(this.props.token)\n            this.props.history.replace('/new-sale')\n        }\n    }\n\n\n    state = {\n        quantity: null,\n        idNameObject: null\n    }\n\n\n    onSubmitHandler = (event) => {\n        event.preventDefault()\n\n        const {idNameObject} = this.state;\n\n      if(idNameObject){\n        const productId = idNameObject.split('-')[1];\n        const productName = idNameObject.split('-')[0];\n        const productQuantity = idNameObject.split('-')[2];\n\n        if(this.state.quantity > productQuantity){\n            return alert('You do not have enough product. Please reduce it or Buy more product');\n        }else{\n            this.props.iWantToSell(productName, productId, this.state.quantity, this.props.token)\n        }\n      }else{\n          alert('Please Select an Option')\n      }\n       \n    }   \n\n    render(){\n\n        let saleBody = (\n            <div style={{marginTop: '20px'}} >\n                    <div align='center' style={{borderLeft: '30px'}} >\n                        <h5>Sell Products</h5>\n                    </div>\n                    <div align='center' style={{font: '17px', color: 'green'}} >\n                       {this.props.success?  <p> <i class=\"small material-icons\">done_all</i>{this.props.success}</p> : null }\n                    </div>\n                    <div>\n                        <form className=\"col s12\" onSubmit={this.onSubmitHandler}>\n                            <div className=\"input-field col s12\">\n                                <select className='browser-default' onChange={(event) => this.setState({idNameObject: event.target.value})} >\n                                <option defaultValue='Select'>Choose your option</option>\n                                 \n                                 {this.props.products.map((item, index)=>\n                                         <option value={item[0]+'-'+item[1]+'-'+item[3]} key={index}>{item[0]}</option>\n                                 )}\n                                </select>\n                                \n                            </div> \n                            \n                            <Input  inputid='quantity' iconname='shopping_basket'  inputtype='number' labelname='Quantity' changed={ (event) => this.setState({quantity: event.target.value})} />\n\n                            <div align='center' >\n                                <Button action='submit' btncolour='indigo' btnname='Sell Product'  iconname='storage'  />\n                            </div>\n\n                            <div align='center' style={{marginTop: '50px'}}>\n                                <Button btncolour='indigo' btnname='View Store' actionType='link' iconname='shop' whereto='/view-products' />\n                            </div>\n\n                        </form>\n                    </div>\n                </div>\n        )\n\n\n        if(!this.props.token){\n            return <Redirect to='/login' />\n        }\n\n        if(this.props.loading){\n            saleBody = <Preloader />\n        }\n\n        return(\n            <Aux>\n                {saleBody}\n            </Aux>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        products: state.sales.products,\n        success: state.sales.success,\n        loading: state.sales.loading\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAutoSignIn: () => { dispatch(checkAuthState()) },\n        onLoadProducts: (token) => { dispatch( get_product_list(token) ) },\n        iWantToSell: (product, productId, quantity, token) => { dispatch (sell(product, productId, quantity, token)) }\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewSales);","import React, { Component } from 'react';\nimport Aux from '../../../hoc/Auxillary';\nimport Button from '../../../components/Button/Button';\nimport {connect} from 'react-redux';\nimport {checkAuthState} from '../../../store/actions/auth';\nimport { Redirect } from 'react-router-dom';\nimport { get_sales } from '../../../store/actions/sale';\nimport Preloader from '../../../components/Preloader/Preloader';\nimport Input from '../../../components/Input/Input';\n\nclass ViewSales extends Component {\n\n    state = {\n        fromDate: null,\n        toDate: null\n    }\n\n    componentDidMount(){\n        this.props.onAutoSignIn()\n        if(this.props.token){\n            this.props.onGetSale(this.props.token)\n        }\n        \n    }\n\n    onClickHandler = (event) => {\n        event.preventDefault();\n        alert('I was clicked')\n    }\n\n    onSubmitHandler = (event) => {\n        event.preventDefault();\n        this.props.onGetSale(this.props.token, this.state.fromDate, this.state.toDate);\n    }\n\n    render(){\n        if(!this.props.token){\n            return <Redirect to='/login' />\n        }\n\n        let amount = '0'\n\n        if(this.props.details.length > 0){\n\n            amount = this.props.details.map( item => item.salesPrice).reduce((a,b) => a + b , 0 )\n        }\n\n        let saleBody = (\n            <div style={{fontSize:'15px'}} >\n                    <div align='center' >\n                        <h5>Sales Record</h5>\n                    </div>\n\n                    <div>\n                        <form onSubmit={this.onSubmitHandler}>\n                            <Input  inputid='startdate' iconname='calender'  inputtype='date' labelname='From' changed={ (event) => this.setState({fromDate: event.target.value})} />\n                            <Input  inputid='todate' iconname='calender'  inputtype='date' labelname='To' changed={ (event) => this.setState({toDate: event.target.value})} />\n\n                            <div align='center' >\n                                <Button action='submit' btncolour='indigo' btnname='View Records'  iconname='storage'  />\n                            </div>\n                        </form>\n                    </div>\n\n                    <h5 align='center' >{this.props.error}</h5>\n                    <div>\n                        <table className='centered highlight '>\n                            <thead>\n                                <tr>\n                                    <th>Product Name</th>\n                                    <th>Quantity</th>\n                                    <th>Sales Price</th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                 {this.props.details.length > 0 ? this.props.details.map( (item, index)=> (\n                                   <Aux key ={index}>\n                                        <tr>\n                                        <td>{item.productName}</td>\n                                        <td>{item.quantity}</td>\n                                        <td>₦{item.salesPrice}</td>\n                                    </tr>\n                                   </Aux>\n                                ) ) : null}\n                            </tbody>\n                        </table>\n                    </div>\n                    <h5 align='center' style={{fontSize: '19px', paddingTop: '40px'}}> Total Price : ₦{amount} </h5>\n                </div>\n\n                \n        );\n\n        if(this.props.loading){\n            saleBody = <Preloader />\n        }\n\n        return (\n            <Aux>\n                {saleBody}\n                <div align='center' >\n                    <Button btncolour='indigo' btnname='Sell Now' actionType='link' iconname='directions_bike' whereto='/new-sale' />\n                </div>\n            </Aux>\n        )\n    }\n}\n\n\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        details: state.sales.details,\n        error: state.sales.error,\n        loading: state.sales.loading\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAutoSignIn: () => { dispatch(checkAuthState()) },\n        onGetSale: (token, startDate, endDate) => { dispatch(get_sales(token,startDate, endDate)) }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewSales);","import React from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport Bone from './containers/Bone/Bone';\nimport home from './containers/pages/Home/Home';\nimport Signup from './containers/pages/Auth/Signup/Signup';\nimport Signin from './containers/pages/Auth/Signin/Signin';\nimport AddProduct from './containers/pages/Store/AddProduct';\nimport ViewProducts from './containers/pages/Store/ViewProducts';\nimport EditProduct from './containers/pages/Store/Edit-product';\nimport Logout from './containers/pages/Auth/Logout/Logout';\nimport NewSales from './containers/pages/Sales/NewSales';\nimport ViewSales from './containers/pages/Sales/ViewSales';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <Bone>\n        <div className=\"App-header\">\n          <Switch>\n              <Route path='/register' component={Signup}  />\n              <Route path='/login' component={Signin} />\n              <Route path='/add-product' component={AddProduct} />\n              <Route path='/view-products' component={ViewProducts}  />\n              <Route path='/edit-product' component={EditProduct} />\n              <Route path='/logout' component={Logout} />\n              <Route path='/new-sale' component={NewSales} />\n              <Route path='/sales' component={ViewSales} />\n              <Route path='/' exact component={home} />\n          </Switch>\n        </div>\n          \n      </Bone>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    error: false,\n    adding: false,\n    details: [],\n    successMessage: null,\n    updateMessage: null,\n    editParams: {\n        quantity: null,\n        price: null,\n        productId: null\n    }\n}\n\nconst init_store_details = (state, action) => {\n    return{\n        ...state,\n        adding: true\n    }\n}\n\nconst store_details_failed = (state, action) => {\n    return {\n        ...state,\n        adding: false,\n        error: action.error,\n        details: []\n    }\n}\n\nconst store_details_success = (state, action) => {\n    return {\n        ...state, \n        adding: false,\n        error: false,\n        details: [...action.details]\n    }\n}\n\nconst add_product_success = (state, action) => {\n    return {\n        ...state,\n        adding: false,\n        successMessage: action.successMessage,\n    }\n}\n\nconst add_product_failed = (state, action) => {\n    return {\n        ...state,\n        adding: false,\n        error: action.error\n    }\n}\n\nconst add_product_start = (state, action) => {\n    return {\n        ...state,\n        adding: true\n    }\n}\n\n\nconst get_edit_params = (state, action) => {\n    return {\n        ...state,\n        editParams: {\n            quantity: action.quantity,\n            price: action.price,\n            productId: action.productId\n        }\n    }\n}\n\nconst init_product_edit = (state, action) => {\n    return {\n        ...state,\n        adding: true\n\n    }\n}\n\nconst product_edit_success = (state, action) => {\n    return {\n        ...state,\n        updateMessage: action.successMsg,\n        editParams: {\n            quantity: null,\n            price: null,\n            productId: null\n        }\n    }\n}\n\nconst product_edit_failed = (state, action) => {\n    return {\n        ...state,\n        error: action.error\n    }\n}\n\nconst reducer = (state=initialState, action) => {\n    switch( action.type ){\n        case actionTypes.INIT_STORE_DETAILS : return init_store_details(state, action);\n        case actionTypes.STORE_DATAILS_SUCCESS: return store_details_success(state, action);\n        case actionTypes.STORE_DATAILS_FAILED: return store_details_failed(state, action);\n        case actionTypes.ADD_PRODUCT_START : return add_product_start(state, action);\n        case actionTypes.ADD_PRODUCT_FAILED: return add_product_failed(state, action);\n        case actionTypes.ADD_PRODUCT_SUCCESS: return add_product_success(state, action);\n        case actionTypes.GET_EDIT_PARAMS: return get_edit_params(state, action);\n        case actionTypes.INIT_PRODUCT_EDIT: return init_product_edit(state, action);\n        case actionTypes.PRODUCT_EDIT_FAILED: return product_edit_failed(state, action);\n        case actionTypes.PRODUCT_EDIT_SUCCESS: return product_edit_success(state, action)\n        default:\n            return state;\n    }\n}\n\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\n\n\n\nconst initialState = {\n    error: null,\n    loading: false,\n    details: [],\n    success: null,\n    products: []\n}\n\nconst init_get_sales = (state, action) => {\n    return {\n        ...state,\n        loading: true\n    }\n}\n\nconst get_sales_success = (state, action) => {\n    return{\n        ...state,\n        loading: false,\n        details: [...action.details],\n        error: null\n    }\n}\n\nconst get_sales_failed = (state, action) => {\n    return {\n        ...state,\n        loading: false,\n        error: action.error,\n        details: []\n    }\n}\n\nconst init_get_products = (state, action) => {\n    return {\n        ...state,\n        loading: true\n    }\n}\n\nconst get_products_failed = (state, action) => {\n    return{\n        ...state, \n        loading: false,\n        error: action.error\n    }\n}\n\nconst get_products_success = (state, action) => {\n    return {\n        ...state, \n        products: [...action.products],\n        loading: false\n    }\n}\n\n\nconst init_sale = (state, action) => {\n    return {\n        ...state, \n        loading: true\n    }\n}\n\nconst sale_success = (state, action) => {\n    return {\n        ...state, \n        success: action.saleMessage,\n        loading: false\n    }\n}\n\nconst sale_failed = (state, action) => {\n    return {\n        ...state, \n        loading: false,\n        error: action.error\n    }\n}\n\nconst reducer = (state=initialState, action) => {\n    switch( action.type ){\n        case actionTypes.INIT_GET_SALES: return init_get_sales(state, action);\n        case actionTypes.GET_SALES_FAILED: return get_sales_failed(state, action)\n        case actionTypes.GET_SALES_SUCCESS : return get_sales_success(state, action);\n        case actionTypes.INIT_GET_PRODUCT_LIST : return init_get_products(state, action);\n        case actionTypes.GET_PRODUCT_LIST_SUCCESS : return get_products_success(state, action);\n        case actionTypes.GET_PRODUCT_LIST_FAILED : return get_products_failed(state, action);\n        case actionTypes.INIT_SALE : return init_sale(state, action);\n        case actionTypes.SALE_FAILED: return sale_failed(state, action);\n        case actionTypes.SALE_SUCCESS: return sale_success(state, action);\n        default:\n            return state;\n    }\n}\n\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    error: false,\n    loading: false,\n    token: null,\n    authMsg: null,\n    signupMsg: null,\n    mismatch: null\n}\n\n\nconst auth_init = (state, action) => {\n    return {\n        ...state,\n        loading: true\n    }\n}\n\nconst signin_success = (state, action) => {\n    return {\n        ...state,\n        authMsg: action.authMsg,\n        token: action.token,\n        loading: false\n    }\n}\n\nconst signin_fail = (state, action) => {\n    return {\n        ...state,\n        loading: false,\n        error: action.err\n    }\n}\n\nconst signup_fail = (state, action) => {\n    return {\n        ...state,\n        loading: false,\n        err: action.err,\n        mismatch: null\n    }\n}\n\nconst signup_success = (state, action) => {\n    return  {\n        ...state,\n        authMsg: action.authMsg,\n        loading: false,\n        \n    }\n}\n\nconst password_mismatch = (state, action) => {\n    return {\n        ...state,\n        mismatch: 'Password Does Not Match'\n    }\n}\n\nconst logout = (state, action) => {\n    return {\n        ...state,\n        token: null,\n        authMsg:null\n    }\n}\n\nconst reducer = (state=initialState, action) => {\n    switch( action.type ){\n        case actionTypes.INIT_AUTH_START : return auth_init(state, action);\n        case actionTypes.SIGNIN_FAIL : return signin_fail(state, action);\n        case actionTypes.SIGNIN_SUCCESS: return signin_success(state, action);\n        case actionTypes.SIGNUP_FAIL: return signup_fail(state, action);\n        case actionTypes.SIGNUP_SUCCESS: return signup_success(state, action);\n        case actionTypes.PASSWORD_MISMATCH: return password_mismatch(state, action);\n        case actionTypes.AUTH_LOGOUT : return logout(state, action)\n        default:\n            return state;\n    }\n}\n\n\nexport default reducer;\n","import React from 'react';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from  'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport storeReducer from './store/reducers/store';\nimport salesReducer from './store/reducers/sales';\nimport authReducer from './store/reducers/auth';\n\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    cart: storeReducer,\n    sales: salesReducer\n});\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\n\nconst app = (\n \n    <Provider store={store} >\n        <HashRouter>\n            <App />\n        </HashRouter>\n    </Provider>\n\n);\n\nReactDOM.render(app, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}